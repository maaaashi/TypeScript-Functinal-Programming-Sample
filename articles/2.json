{"rendered_body":"\u003cp data-sourcepos=\"1:1-1:140\"\u003eWeb Componentsを使ってマイクロフロントエンドを実現する方法は多くのプロジェクトで採用されています。\u003c/p\u003e\n\u003cp data-sourcepos=\"3:1-3:176\"\u003e私も仕事でWeb Componentsを扱っていますが、再利用性の部分で課題を感じており、その解決策をこのブログで提案したいと思います。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"5:1-5:27\"\u003e\n\u003cspan id=\"再利用性の課題感\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%86%8D%E5%88%A9%E7%94%A8%E6%80%A7%E3%81%AE%E8%AA%B2%E9%A1%8C%E6%84%9F\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e再利用性の課題感\u003c/h2\u003e\n\u003cp data-sourcepos=\"7:1-7:66\"\u003e例えば以下のようなコンポーネントを想像します\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"html\" data-sourcepos=\"9:1-12:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;h1\u0026gt;\u003c/span\u003eMy Todo\u003cspan class=\"nt\"\u003e\u0026lt;/h1\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;my-todos\u0026gt;\u0026lt;/my-todos\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"14:1-14:164\"\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2985550%2Fc09a9cba-03e6-2732-28c8-1ad59d593554.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a3273ccad2d35787c0e21b2beb0a36c4\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2985550%2Fc09a9cba-03e6-2732-28c8-1ad59d593554.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=a3273ccad2d35787c0e21b2beb0a36c4\" alt=\"スクリーンショット 2024-12-31 14.22.02.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2985550%2Fc09a9cba-03e6-2732-28c8-1ad59d593554.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=4cdffe1f32c1ec8f51e115c7768b31bd 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2985550/c09a9cba-03e6-2732-28c8-1ad59d593554.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"16:1-16:341\"\u003eこの\u003ccode\u003emy-todos\u003c/code\u003eコンポーネントは、\u003ccode\u003etodo\u003c/code\u003eの一覧を表示するコンポーネントで、JavaScriptのファイルを読み込むことで、どのサイトでも簡単にこのカスタムエレメントを使用することができます。また、適切にCSSを実装することで、レイアウトも調整できます。\u003c/p\u003e\n\u003cp data-sourcepos=\"18:1-18:81\"\u003eただ、これは本当に再利用性が高いと言えるのでしょうか？\u003c/p\u003e\n\u003cp data-sourcepos=\"20:1-20:72\"\u003e例えば以下のようなユースケースではどうでしょうか\u003c/p\u003e\n\u003col data-sourcepos=\"22:1-24:0\"\u003e\n\u003cli data-sourcepos=\"22:1-22:109\"\u003e\u003cstrong\u003eリストスタイルのデザインではなく、カードタイプのデザインが必要な場合\u003c/strong\u003e\u003c/li\u003e\n\u003cli data-sourcepos=\"23:1-24:0\"\u003e\u003cstrong\u003eリストスタイルはそのままで良いが、個人のTodoではなく、TeamのTodoを表示したい場合\u003c/strong\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp data-sourcepos=\"25:1-25:149\"\u003eこれらのニーズを満たすために、my-todosコンポーネントにプロパティを追加することを考えるかもしれません。\u003c/p\u003e\n\u003cp data-sourcepos=\"27:1-27:12\"\u003e例えば、\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"html\" data-sourcepos=\"29:1-32:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- カードスタイルのデザインということをプロパティで伝える --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;my-todos\u003c/span\u003e \u003cspan class=\"na\"\u003edesign=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"card\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/my-todos\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"34:1-34:12\"\u003eまたは、\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"html\" data-sourcepos=\"36:1-39:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"c\"\u003e\u0026lt;!-- teamのtodoということをプロパティで伝える --\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;my-todos\u003c/span\u003e \u003cspan class=\"na\"\u003etype=\u003c/span\u003e\u003cspan class=\"s\"\u003e\"team\"\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/my-todos\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003cp data-sourcepos=\"41:1-42:131\"\u003eこれらのアプローチでは、プロパティを増やすことでユースケースに対応しようとしますが、元々のシンプルな再利用性が失われてしまうことになります。\u003cbr\u003e\n\u003ccode\u003emy-todos\u003c/code\u003eという名前のコンポーネントで、チームのTodoを表示するという矛盾が生じてしまいます。\u003c/p\u003e\n\u003cp data-sourcepos=\"44:1-44:228\"\u003eまた、プロパティを追加することを避けて、ゼロから新しいコンポーネントを作る選択肢を取る場合、車輪の再発明が避けられず、開発が非効率になることが多いです。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"46:1-46:12\"\u003e\n\u003cspan id=\"解決策\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A7%A3%E6%B1%BA%E7%AD%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e解決策\u003c/h2\u003e\n\u003cp data-sourcepos=\"48:1-48:164\"\u003eそこで、今日紹介する解決策というのは、「\u003cstrong\u003eslot\u003c/strong\u003eに\u003cstrong\u003etodo\u003c/strong\u003eを表示する\u003cstrong\u003eレンダラー\u003c/strong\u003eを注入する」というアプローチです。\u003c/p\u003e\n\u003cp data-sourcepos=\"50:1-50:198\"\u003eこの方法により、コンポーネント間の柔軟な切り替えが可能になり、再利用性を損なうことなく、異なるデザインやユースケースに対応できます。\u003c/p\u003e\n\u003ch3 data-sourcepos=\"52:1-52:34\"\u003e\n\u003cspan id=\"コンポーネントの分割\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E3%81%AE%E5%88%86%E5%89%B2\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eコンポーネントの分割\u003c/h3\u003e\n\u003cp data-sourcepos=\"54:1-54:94\"\u003eまず、先ほどの\u003ccode\u003emy-todos\u003c/code\u003eコンポーネントをどう分割するかを考えます。\u003c/p\u003e\n\u003cp data-sourcepos=\"56:1-56:255\"\u003e\u003ccode\u003emy-todos\u003c/code\u003eコンポーネントの主な役割は「自分のTodoの一覧を取得して表示すること」です。この2つの機能を別々のコンポーネントに分けることで、役割ごとに責任を持たせることができます。\u003c/p\u003e\n\u003ctable data-sourcepos=\"58:1-61:104\"\u003e\n\u003cthead\u003e\n\u003ctr data-sourcepos=\"58:1-58:30\"\u003e\n\u003cth data-sourcepos=\"58:2-58:22\"\u003eコンポーネント\u003c/th\u003e\n\u003cth data-sourcepos=\"58:24-58:29\"\u003e役割\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\u003ctbody\u003e\n\u003ctr data-sourcepos=\"60:1-60:88\"\u003e\n\u003ctd data-sourcepos=\"60:2-60:13\"\u003e\u003cstrong\u003emy-todos\u003c/strong\u003e\u003c/td\u003e\n\u003ctd data-sourcepos=\"60:15-60:87\"\u003e自分のtodoの一覧を取得し、親コンポーネントに伝える\u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr data-sourcepos=\"61:1-61:104\"\u003e\n\u003ctd data-sourcepos=\"61:2-61:18\"\u003e\u003cstrong\u003elist-renderer\u003c/strong\u003e\u003c/td\u003e\n\u003ctd data-sourcepos=\"61:20-61:103\"\u003e材料(todoのid一覧)を受け取り、リストスタイルでtodoを描画する\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 data-sourcepos=\"63:1-63:22\"\u003e\n\u003cspan id=\"実装イメージ\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%AE%9F%E8%A3%85%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e実装イメージ\u003c/h3\u003e\n\u003cp data-sourcepos=\"65:1-65:74\"\u003e\u003ccode\u003eLit\u003c/code\u003eで実装するイメージとしては以下のような感じです\u003c/p\u003e\n\u003ch4 data-sourcepos=\"67:1-67:50\"\u003e\n\u003cspan id=\"親コンポーネント呼び出し側\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E8%A6%AA%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88%E5%91%BC%E3%81%B3%E5%87%BA%E3%81%97%E5%81%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e親コンポーネント（呼び出し側）\u003c/h4\u003e\n\u003cp data-sourcepos=\"68:1-68:163\"\u003e親コンポーネントではイベントリスナーを設定し、\u003ccode\u003emy-todos\u003c/code\u003eからtodoのIDの一覧を受け取り、それを\u003ccode\u003elist-renderer\u003c/code\u003eに渡します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"html\" data-sourcepos=\"70:1-74:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nt\"\u003e\u0026lt;my-todos\u003c/span\u003e  \u003cspan class=\"err\"\u003e@\u003c/span\u003e\u003cspan class=\"na\"\u003etodo-fetched=\u003c/span\u003e\u003cspan class=\"s\"\u003e${this.handleTodoFetched}\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u003c/span\u003e\n  \u003cspan class=\"nt\"\u003e\u0026lt;list-renderer\u003c/span\u003e \u003cspan class=\"na\"\u003e.ids=\u003c/span\u003e\u003cspan class=\"s\"\u003e${this.todoIds}\u003c/span\u003e\u003cspan class=\"nt\"\u003e\u0026gt;\u0026lt;/list-renderer\u0026gt;\u003c/span\u003e\n\u003cspan class=\"nt\"\u003e\u0026lt;/my-todos\u0026gt;\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 data-sourcepos=\"76:1-76:36\"\u003e\n\u003cspan id=\"my-todosコンポーネント\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#my-todos%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003emy-todos\u003c/code\u003eコンポーネント\u003c/h4\u003e\n\u003cp data-sourcepos=\"77:1-77:154\"\u003e\u003ccode\u003emy-todos\u003c/code\u003eコンポーネントは、\u003ccode\u003efetchTodos\u003c/code\u003e関数を使ってTodoの一覧を取得し、そのID一覧を親コンポーネントに渡します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"typescript\" data-sourcepos=\"79:1-101:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e\u003cspan class=\"nf\"\u003econstructor\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003esuper\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e\n\n  \u003cspan class=\"nf\"\u003efetchTodos\u003c/span\u003e\u003cspan class=\"p\"\u003e().\u003c/span\u003e\u003cspan class=\"nf\"\u003ethen\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"kd\"\u003econst\u003c/span\u003e \u003cspan class=\"nx\"\u003eevent\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"k\"\u003enew\u003c/span\u003e \u003cspan class=\"nc\"\u003eCustomEvent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"s1\"\u003etodo-fetched\u003c/span\u003e\u003cspan class=\"dl\"\u003e'\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n      \u003cspan class=\"na\"\u003edetail\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n        \u003cspan class=\"na\"\u003eids\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nx\"\u003edata\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eids\u003c/span\u003e\u003cspan class=\"p\"\u003e,\u003c/span\u003e\n      \u003cspan class=\"p\"\u003e},\u003c/span\u003e\n    \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\n    \u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003edispatchEvent\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nx\"\u003eevent\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\n\u003cspan class=\"nf\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n  \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\n    \u0026lt;div\u0026gt;\n      \u0026lt;slot\u0026gt;\u0026lt;/slot\u0026gt;\n    \u0026lt;/div\u0026gt;\n  `\u003c/span\u003e\n\u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch4 data-sourcepos=\"103:1-103:41\"\u003e\n\u003cspan id=\"list-rendererコンポーネント\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#list-renderer%E3%82%B3%E3%83%B3%E3%83%9D%E3%83%BC%E3%83%8D%E3%83%B3%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e\u003ccode\u003elist-renderer\u003c/code\u003eコンポーネント\u003c/h4\u003e\n\u003cp data-sourcepos=\"105:1-105:94\"\u003e受け取ったTodoのID一覧をもとに、リストスタイルでTodoを描画します。\u003c/p\u003e\n\u003cdiv class=\"code-frame\" data-lang=\"typescript\" data-sourcepos=\"107:1-116:3\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u003ccode\u003e  \u003cspan class=\"p\"\u003e@\u003c/span\u003e\u003cspan class=\"nd\"\u003eproperty\u003c/span\u003e\u003cspan class=\"p\"\u003e({\u003c/span\u003e \u003cspan class=\"na\"\u003etype\u003c/span\u003e\u003cspan class=\"p\"\u003e:\u003c/span\u003e \u003cspan class=\"nb\"\u003eArray\u003c/span\u003e \u003cspan class=\"p\"\u003e})\u003c/span\u003e\n  \u003cspan class=\"nx\"\u003eids\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u003c/span\u003e \u003cspan class=\"p\"\u003e[]\u003c/span\u003e \u003cspan class=\"kd\"\u003eas \u003c/span\u003e\u003cspan class=\"kr\"\u003enumber\u003c/span\u003e\u003cspan class=\"p\"\u003e[]\u003c/span\u003e\n\n  \u003cspan class=\"nf\"\u003erender\u003c/span\u003e\u003cspan class=\"p\"\u003e()\u003c/span\u003e \u003cspan class=\"p\"\u003e{\u003c/span\u003e\n    \u003cspan class=\"k\"\u003ereturn\u003c/span\u003e \u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"s2\"\u003e`\n      \u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"k\"\u003ethis\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nx\"\u003eids\u003c/span\u003e\u003cspan class=\"p\"\u003e.\u003c/span\u003e\u003cspan class=\"nf\"\u003emap\u003c/span\u003e\u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"o\"\u003e=\u0026gt;\u003c/span\u003e \u003cspan class=\"nx\"\u003ehtml\u003c/span\u003e\u003cspan class=\"s2\"\u003e` \u0026lt;todo-list .todoId=\u003c/span\u003e\u003cspan class=\"p\"\u003e${\u003c/span\u003e\u003cspan class=\"nx\"\u003eid\u003c/span\u003e\u003cspan class=\"p\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026gt;\u0026lt;/todo-list\u0026gt;`\u003c/span\u003e\u003cspan class=\"p\"\u003e)}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\n    `\u003c/span\u003e\n  \u003cspan class=\"p\"\u003e}\u003c/span\u003e\n\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n\u003ch2 data-sourcepos=\"118:1-118:15\"\u003e\n\u003cspan id=\"メリット\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%A1%E3%83%AA%E3%83%83%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eメリット\u003c/h2\u003e\n\u003cp data-sourcepos=\"120:1-120:296\"\u003eこのアプローチでは、\u003ccode\u003elist-renderer\u003c/code\u003eを例えば\u003ccode\u003ecard-renderer\u003c/code\u003eに置き換えるだけで、カードタイプのデザインに切り替えることができます。また、\u003ccode\u003emy-todos\u003c/code\u003eを\u003ccode\u003eteam-todos\u003c/code\u003eに置き換えることで、チームのTodoを表示することができます。\u003c/p\u003e\n\u003cp data-sourcepos=\"122:1-122:183\"\u003eこのように、コンポーネントを単一責任で分け、差異だけを変更することで、新しいユースケースに柔軟に対応できるようになります。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"124:1-124:9\"\u003e\n\u003cspan id=\"結論\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%B5%90%E8%AB%96\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e結論\u003c/h2\u003e\n\u003cp data-sourcepos=\"126:1-126:176\"\u003eWeb Componentsの再利用性を高めるためには、コンポーネントの責務を分け、柔軟にカスタマイズできる仕組みを提供することが重要。\u003c/p\u003e\n\u003cp data-sourcepos=\"128:1-128:180\"\u003e\u003ccode\u003eslot\u003c/code\u003eとカスタムイベントを活用することで、再利用性を保ちながら、デザインやデータの変更にも簡単に対応できるようになります。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"130:1-130:27\"\u003e\n\u003cspan id=\"ソースコードなど\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%82%BD%E3%83%BC%E3%82%B9%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AA%E3%81%A9\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eソースコードなど\u003c/h2\u003e\n\u003cp data-sourcepos=\"132:1-132:31\"\u003e\u003cstrong\u003e実装してみたサイト\u003c/strong\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"134:1-134:45\"\u003e\u003ciframe id=\"qiita-embed-content__668656dfc7c91f39aa043b279debbf0c\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__668656dfc7c91f39aa043b279debbf0c\" data-content=\"https%3A%2F%2Fwebcomponent-renderer-play.vercel.app\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\"\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\u003cp data-sourcepos=\"136:1-136:22\"\u003e\u003cstrong\u003eソースコード\u003c/strong\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"138:1-138:54\"\u003e\u003ciframe id=\"qiita-embed-content__9a1c1dbf2d0804f10f9a75d28e315b18\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__9a1c1dbf2d0804f10f9a75d28e315b18\" data-content=\"https%3A%2F%2Fgithub.com%2Fmaaaashi%2Fwebcomponent-renderer-play\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\"\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n","body":"Web Componentsを使ってマイクロフロントエンドを実現する方法は多くのプロジェクトで採用されています。\n\n私も仕事でWeb Componentsを扱っていますが、再利用性の部分で課題を感じており、その解決策をこのブログで提案したいと思います。\n\n## 再利用性の課題感\n\n例えば以下のようなコンポーネントを想像します\n\n```html\n\u003ch1\u003eMy Todo\u003c/h1\u003e\n\u003cmy-todos\u003e\u003c/my-todos\u003e\n```\n\n![スクリーンショット 2024-12-31 14.22.02.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2985550/c09a9cba-03e6-2732-28c8-1ad59d593554.png)\n\nこの`my-todos`コンポーネントは、`todo`の一覧を表示するコンポーネントで、JavaScriptのファイルを読み込むことで、どのサイトでも簡単にこのカスタムエレメントを使用することができます。また、適切にCSSを実装することで、レイアウトも調整できます。\n\nただ、これは本当に再利用性が高いと言えるのでしょうか？\n\n例えば以下のようなユースケースではどうでしょうか\n\n1. **リストスタイルのデザインではなく、カードタイプのデザインが必要な場合**\n1. **リストスタイルはそのままで良いが、個人のTodoではなく、TeamのTodoを表示したい場合**\n\nこれらのニーズを満たすために、my-todosコンポーネントにプロパティを追加することを考えるかもしれません。\n\n例えば、\n\n```html\n\u003c!-- カードスタイルのデザインということをプロパティで伝える --\u003e\n\u003cmy-todos design=\"card\"\u003e\u003c/my-todos\u003e\n```\n\nまたは、\n\n```html\n\u003c!-- teamのtodoということをプロパティで伝える --\u003e\n\u003cmy-todos type=\"team\"\u003e\u003c/my-todos\u003e\n```\n\nこれらのアプローチでは、プロパティを増やすことでユースケースに対応しようとしますが、元々のシンプルな再利用性が失われてしまうことになります。\n`my-todos`という名前のコンポーネントで、チームのTodoを表示するという矛盾が生じてしまいます。\n\nまた、プロパティを追加することを避けて、ゼロから新しいコンポーネントを作る選択肢を取る場合、車輪の再発明が避けられず、開発が非効率になることが多いです。\n\n## 解決策\n\nそこで、今日紹介する解決策というのは、「**slot**に**todo**を表示する**レンダラー**を注入する」というアプローチです。\n\nこの方法により、コンポーネント間の柔軟な切り替えが可能になり、再利用性を損なうことなく、異なるデザインやユースケースに対応できます。\n\n### コンポーネントの分割\n\nまず、先ほどの`my-todos`コンポーネントをどう分割するかを考えます。\n\n`my-todos`コンポーネントの主な役割は「自分のTodoの一覧を取得して表示すること」です。この2つの機能を別々のコンポーネントに分けることで、役割ごとに責任を持たせることができます。\n\n|コンポーネント|役割|\n|----|----|\n|**my-todos**|自分のtodoの一覧を取得し、親コンポーネントに伝える|\n|**list-renderer**|材料(todoのid一覧)を受け取り、リストスタイルでtodoを描画する|\n\n### 実装イメージ\n\n`Lit`で実装するイメージとしては以下のような感じです\n\n#### 親コンポーネント（呼び出し側）\n親コンポーネントではイベントリスナーを設定し、`my-todos`からtodoのIDの一覧を受け取り、それを`list-renderer`に渡します。\n\n```html\n\u003cmy-todos  @todo-fetched=${this.handleTodoFetched}\u003e\n  \u003clist-renderer .ids=${this.todoIds}\u003e\u003c/list-renderer\u003e\n\u003c/my-todos\u003e\n```\n\n#### `my-todos`コンポーネント\n`my-todos`コンポーネントは、`fetchTodos`関数を使ってTodoの一覧を取得し、そのID一覧を親コンポーネントに渡します。\n\n```typescript\nconstructor() {\n  super()\n\n  fetchTodos().then((data) =\u003e {\n    const event = new CustomEvent('todo-fetched', {\n      detail: {\n        ids: data.ids,\n      },\n    })\n\n    this.dispatchEvent(event)\n  })\n}\n\nrender() {\n  return html`\n    \u003cdiv\u003e\n      \u003cslot\u003e\u003c/slot\u003e\n    \u003c/div\u003e\n  `\n}\n```\n\n#### `list-renderer`コンポーネント\n\n受け取ったTodoのID一覧をもとに、リストスタイルでTodoを描画します。\n\n```typescript\n  @property({ type: Array })\n  ids = [] as number[]\n\n  render() {\n    return html`\n      ${this.ids.map((id) =\u003e html` \u003ctodo-list .todoId=${id}\u003e\u003c/todo-list\u003e`)}\n    `\n  }\n```\n\n## メリット\n\nこのアプローチでは、`list-renderer`を例えば`card-renderer`に置き換えるだけで、カードタイプのデザインに切り替えることができます。また、`my-todos`を`team-todos`に置き換えることで、チームのTodoを表示することができます。\n\nこのように、コンポーネントを単一責任で分け、差異だけを変更することで、新しいユースケースに柔軟に対応できるようになります。\n\n## 結論\n\nWeb Componentsの再利用性を高めるためには、コンポーネントの責務を分け、柔軟にカスタマイズできる仕組みを提供することが重要。\n\n`slot`とカスタムイベントを活用することで、再利用性を保ちながら、デザインやデータの変更にも簡単に対応できるようになります。\n\n## ソースコードなど\n\n**実装してみたサイト**\n\nhttps://webcomponent-renderer-play.vercel.app\n\n**ソースコード**\n\nhttps://github.com/maaaashi/webcomponent-renderer-play\n","coediting":false,"comments_count":0,"created_at":"2025-01-02T02:16:31+09:00","group":null,"id":"3376cdd0b6ee75c634eb","likes_count":1,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"JavaScript","versions":[]},{"name":"TypeScript","versions":[]},{"name":"WebComponents","versions":[]},{"name":"Lit","versions":[]}],"title":"再利用性を高めたWeb Components","updated_at":"2025-01-02T02:17:15+09:00","url":"https://qiita.com/maaaashi/items/3376cdd0b6ee75c634eb","user":{"description":"都内のweb系の企業でエンジニアをしています。\r\nどなたかのお役に立てれば幸いです。\r\n\r\n【Qiita Advent Calendar 2022】【Qiita Advent Calendar 2023】完走賞いただきました！","facebook_id":"","followees_count":22,"followers_count":26,"github_login_name":null,"id":"maaaashi","items_count":116,"linkedin_id":"","location":"千葉","name":"","organization":"","permanent_id":2985550,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/2985550/6528cb551ba394c700da26cb135be1fc3f2928b5/x_large.png?1669290275","team_only":false,"twitter_screen_name":"pg_maaaashi","website_url":"https://maaaashi-website.mss-rep.com/"},"page_views_count":null,"team_membership":null,"organization_url_name":null,"slide":false}