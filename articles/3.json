{"rendered_body":"\u003cp data-sourcepos=\"1:1-1:137\"\u003e\u003ca href=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2985550%2Ff4cd8ce0-6352-a1d8-4cae-f39dd44f4def.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=919453f1f5f71e404afff473adf3a2a8\" target=\"_blank\" rel=\"nofollow noopener\"\u003e\u003cimg src=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2985550%2Ff4cd8ce0-6352-a1d8-4cae-f39dd44f4def.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;s=919453f1f5f71e404afff473adf3a2a8\" alt=\"advent_calendar_2024.png\" srcset=\"https://qiita-user-contents.imgix.net/https%3A%2F%2Fqiita-image-store.s3.ap-northeast-1.amazonaws.com%2F0%2F2985550%2Ff4cd8ce0-6352-a1d8-4cae-f39dd44f4def.png?ixlib=rb-4.0.0\u0026amp;auto=format\u0026amp;gif-q=60\u0026amp;q=75\u0026amp;w=1400\u0026amp;fit=max\u0026amp;s=e73e34703df29b1ac521a37bfd9b053c 1x\" data-canonical-src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2985550/f4cd8ce0-6352-a1d8-4cae-f39dd44f4def.png\" loading=\"lazy\"\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"3:1-3:78\"\u003e\u003ca href=\"https://qiita.com/advent-calendar/2024/clojure\"\u003e\u003cem\u003eAdvent Calendar 2024 Day 1\u003c/em\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"5:1-6:110\"\u003e今日から \u003cstrong\u003eQIita アドベントカレンダー2024\u003c/strong\u003e を走らせていただきます\u003cbr\u003e\n\u003ccode\u003eClojure\u003c/code\u003e に関するあれこれで1ヶ月間やり切りたいと思うのでよろしくお願いします\u003c/p\u003e\n\u003ch2 data-sourcepos=\"8:1-8:25\"\u003e\n\u003cspan id=\"なぜclojureなのか\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%81%AA%E3%81%9Cclojure%E3%81%AA%E3%81%AE%E3%81%8B\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eなぜClojureなのか\u003c/h2\u003e\n\u003cp data-sourcepos=\"10:1-11:42\"\u003eこれまでもClojureの書き心地が好きで、\u003cbr\u003e\nたまに遊んだりしていました。\u003c/p\u003e\n\u003cp data-sourcepos=\"13:1-15:66\"\u003eしかし、ちゃんと腰を据えて勉強をしたことがなく、\u003cbr\u003e\n基本的なことも全然わからないなと思い、\u003cbr\u003e\n集中して勉強をする期間を設けいと思いました。\u003c/p\u003e\n\u003cp data-sourcepos=\"17:1-19:53\"\u003eClojureのような表現力が高く、ハイスペック言語を学ぶことは、\u003cbr\u003e\n他の言語を書いている時でも役に立つと思っています。\u003cbr\u003e\n(問題に対しての手札が増えるイメージ)\u003c/p\u003e\n\u003cp data-sourcepos=\"21:1-23:138\"\u003eまた、他の関数型言語を仕事で書いたことがありますが、\u003cbr\u003e\n「関数型の良さを引き出せているのだろうか？」\u003cbr\u003e\nと考えることが多く、そのあたりに関しても意識しながらアウトプットしていきたいと思っています。\u003c/p\u003e\n\u003cp data-sourcepos=\"25:1-26:84\"\u003eさて、動機はこんなところにして、本題のClojureの話をしていきます\u003cbr\u003e\n今日は公式ドキュメントを読みながらまとめようと思います。\u003c/p\u003e\n\u003ch2 data-sourcepos=\"28:1-28:16\"\u003e\n\u003cspan id=\"clojureとは\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#clojure%E3%81%A8%E3%81%AF\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eClojureとは\u003c/h2\u003e\n\u003cp data-sourcepos=\"30:1-30:54\"\u003e公式で書かれているものを訳してみます\u003c/p\u003e\n\u003cblockquote data-sourcepos=\"32:1-41:19\"\u003e\n\u003cp data-sourcepos=\"32:3-32:155\"\u003e\u003cstrong\u003eClojure is a robust, practical, and fast programming language with a set of useful features that together form a simple, coherent, and powerful tool.\u003c/strong\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"34:3-34:494\"\u003eClojure is a dynamic, general-purpose programming language, combining the approachability and interactive development of a scripting language with an efficient and robust infrastructure for multithreaded programming. Clojure is a compiled language, yet remains completely dynamic – every feature supported by Clojure is supported at runtime. Clojure provides easy access to the Java frameworks, with optional type hints and type inference, to ensure that calls to Java can avoid reflection.\u003c/p\u003e\n\u003cp data-sourcepos=\"36:3-36:396\"\u003eClojure is a dialect of Lisp, and shares with Lisp the code-as-data philosophy and a powerful macro system. Clojure is predominantly a functional programming language, and features a rich set of immutable, persistent data structures. When mutable state is needed, Clojure offers a software transactional memory system and reactive Agent system that ensure clean, correct, multithreaded designs.\u003c/p\u003e\n\u003cp data-sourcepos=\"38:3-38:98\"\u003eI hope you find Clojure's combination of facilities elegant, powerful, practical and fun to use.\u003c/p\u003e\n\u003cp data-sourcepos=\"40:3-41:19\"\u003eRich Hickey\u003cbr\u003e\nauthor of Clojure\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp data-sourcepos=\"43:1-43:251\"\u003e\u003cstrong\u003eClojureは、堅牢で実用的かつ高速なプログラミング言語であり、一連の便利な機能を備えており、それらが組み合わさることでシンプルで一貫性のある強力なツールを形成しています。\u003c/strong\u003e\u003c/p\u003e\n\u003cp data-sourcepos=\"45:1-45:265\"\u003eClojureは、スクリプト言語の取り組みやすさと対話的な開発環境を備えつつ、マルチスレッドプログラミングに適した効率的で堅牢なインフラを提供する、動的で汎用的なプログラミング言語です。\u003c/p\u003e\n\u003cp data-sourcepos=\"47:1-47:367\"\u003eClojureはコンパイルされる言語ですが、完全に動的で、Clojureがサポートするすべての機能は実行時に使用できます。また、Javaフレームワークに簡単にアクセスできるため、オプションの型ヒントと型推論により、Javaへの呼び出しでリフレクションを避けることが可能です。\u003c/p\u003e\n\u003cp data-sourcepos=\"49:1-49:156\"\u003eClojureはLispの方言であり、Lispと同様に「コードをデータとして扱う」哲学と強力なマクロシステムを持っています。\u003c/p\u003e\n\u003cp data-sourcepos=\"51:1-51:401\"\u003eClojureは主に関数型プログラミング言語であり、不変で永続的なデータ構造が豊富に揃っています。可変状態が必要な場合には、Clojureはソフトウェアトランザクショナルメモリシステムとリアクティブなエージェントシステムを提供しており、クリーンで正確なマルチスレッド設計を可能にします。\u003c/p\u003e\n\u003cp data-sourcepos=\"53:1-53:136\"\u003eClojureの持つ機能の組み合わせがエレガントで強力、実用的で楽しいと感じていただければ幸いです。\u003c/p\u003e\n\u003cp data-sourcepos=\"55:1-55:11\"\u003eRich Hickey\u003c/p\u003e\n\u003cp data-sourcepos=\"57:1-57:20\"\u003e\u003ciframe id=\"qiita-embed-content__f2169d81013d93faf2c22852cdd4691e\" src=\"https://qiita.com/embed-contents/link-card#qiita-embed-content__f2169d81013d93faf2c22852cdd4691e\" data-content=\"https%3A%2F%2Fclojure.org%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\" style=\"width:100%;\" height=\"29\"\u003e\n\u003c/iframe\u003e\n\u003c/p\u003e\n\u003ch2 data-sourcepos=\"59:1-59:9\"\u003e\n\u003cspan id=\"特徴\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E7%89%B9%E5%BE%B4\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e特徴\u003c/h2\u003e\n\u003ch3 data-sourcepos=\"61:1-61:34\"\u003e\n\u003cspan id=\"関数型プログラミング\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e関数型プログラミング\u003c/h3\u003e\n\u003cul data-sourcepos=\"63:1-71:0\"\u003e\n\u003cli data-sourcepos=\"63:1-64:126\"\u003eイミュータブルデータ構造:\n\u003cul data-sourcepos=\"64:5-64:126\"\u003e\n\u003cli data-sourcepos=\"64:5-64:126\"\u003eデータは基本的に不変（immutable）であり、変更が必要な場合は新しいコピーが作成される\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"65:1-66:78\"\u003eファーストクラス関数:\n\u003cul data-sourcepos=\"66:5-66:78\"\u003e\n\u003cli data-sourcepos=\"66:5-66:78\"\u003e関数が第一級市民であり、引数や戻り値として扱える\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"67:1-68:87\"\u003e高階関数:\n\u003cul data-sourcepos=\"68:5-68:87\"\u003e\n\u003cli data-sourcepos=\"68:5-68:87\"\u003e関数を引数に取ったり、関数を返したりする関数をサポート\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"69:1-71:0\"\u003e遅延評価:\n\u003cul data-sourcepos=\"70:5-71:0\"\u003e\n\u003cli data-sourcepos=\"70:5-71:0\"\u003eコレクションは必要になるまで評価されない（lazy-seq）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 data-sourcepos=\"72:1-72:34\"\u003e\n\u003cspan id=\"強力なマクロシステム\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E5%BC%B7%E5%8A%9B%E3%81%AA%E3%83%9E%E3%82%AF%E3%83%AD%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e強力なマクロシステム\u003c/h3\u003e\n\u003cul data-sourcepos=\"74:1-76:0\"\u003e\n\u003cli data-sourcepos=\"74:1-76:0\"\u003eClojureのコードはデータ構造（S式）として記述されるため、コードを簡単に生成、変形可能\n\u003cul data-sourcepos=\"75:5-76:0\"\u003e\n\u003cli data-sourcepos=\"75:5-76:0\"\u003eこれにより高度なDSLや再利用可能な構文を構築可能\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp data-sourcepos=\"77:1-77:74\"\u003e(コードを生成するプログラムくらいに認識しています)\u003c/p\u003e\n\u003ch3 data-sourcepos=\"79:1-79:40\"\u003e\n\u003cspan id=\"データ指向プログラミング\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E3%83%87%E3%83%BC%E3%82%BF%E6%8C%87%E5%90%91%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eデータ指向プログラミング\u003c/h3\u003e\n\u003cul data-sourcepos=\"81:1-82:0\"\u003e\n\u003cli data-sourcepos=\"81:1-82:0\"\u003e組み込みのリッチなデータ構造（リスト、ベクター、マップ、セット）\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 data-sourcepos=\"83:1-83:31\"\u003e\n\u003cspan id=\"並行処理のサポート\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E4%B8%A6%E8%A1%8C%E5%87%A6%E7%90%86%E3%81%AE%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e並行処理のサポート\u003c/h3\u003e\n\u003cul data-sourcepos=\"85:1-91:0\"\u003e\n\u003cli data-sourcepos=\"85:1-86:81\"\u003eソフトウェアトランザクショナルメモリ（STM）:\n\u003cul data-sourcepos=\"86:5-86:81\"\u003e\n\u003cli data-sourcepos=\"86:5-86:81\"\u003e競合状態を避けるためのトランザクショナルな状態管理\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"87:1-88:51\"\u003eエージェントとアトム:\n\u003cul data-sourcepos=\"88:5-88:51\"\u003e\n\u003cli data-sourcepos=\"88:5-88:51\"\u003eマルチスレッド環境で状態を管理\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli data-sourcepos=\"89:1-91:0\"\u003eコア非同期ライブラリ（core.async）:\n\u003cul data-sourcepos=\"90:5-91:0\"\u003e\n\u003cli data-sourcepos=\"90:5-91:0\"\u003eチャネルとゴルーチンのような機能で非同期処理をシンプルにする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 data-sourcepos=\"92:1-92:29\"\u003e\n\u003cspan id=\"javaとの相互運用性\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#java%E3%81%A8%E3%81%AE%E7%9B%B8%E4%BA%92%E9%81%8B%E7%94%A8%E6%80%A7\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003eJavaとの相互運用性\u003c/h3\u003e\n\u003cul data-sourcepos=\"94:1-96:0\"\u003e\n\u003cli data-sourcepos=\"94:1-96:0\"\u003eJVM上で動作するため、Javaの豊富なライブラリやエコシステムをそのまま活用可能\n\u003cul data-sourcepos=\"95:5-96:0\"\u003e\n\u003cli data-sourcepos=\"95:5-96:0\"\u003eJavaオブジェクトやクラスの呼び出しが簡単（例: (java.util.Date.)）\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 data-sourcepos=\"97:1-97:12\"\u003e\n\u003cspan id=\"最後に\" class=\"fragment\"\u003e\u003c/span\u003e\u003ca href=\"#%E6%9C%80%E5%BE%8C%E3%81%AB\"\u003e\u003ci class=\"fa fa-link\"\u003e\u003c/i\u003e\u003c/a\u003e最後に\u003c/h2\u003e\n\u003cp data-sourcepos=\"99:1-99:55\"\u003eこれだけみると、とても\u003cstrong\u003e強そう\u003c/strong\u003eです。\u003c/p\u003e\n\u003cp data-sourcepos=\"101:1-102:241\"\u003e特にマクロあたりはなんとなく知ってるけど、実際に使ったことがなく、\u003cbr\u003e\n今日から始まる \u003cstrong\u003eQIita アドベントカレンダー2024\u003c/strong\u003e を通して、特徴について知識だけでなく、実感していけることを目標にアウトプットしていきますので、よろしくお願いします。\u003c/p\u003e\n","body":"![advent_calendar_2024.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/2985550/f4cd8ce0-6352-a1d8-4cae-f39dd44f4def.png)\n\n[*Advent Calendar 2024 Day 1*](https://qiita.com/advent-calendar/2024/clojure)\n\n今日から **QIita アドベントカレンダー2024** を走らせていただきます\n`Clojure` に関するあれこれで1ヶ月間やり切りたいと思うのでよろしくお願いします\n\n## なぜClojureなのか\n\nこれまでもClojureの書き心地が好きで、\nたまに遊んだりしていました。\n\nしかし、ちゃんと腰を据えて勉強をしたことがなく、\n基本的なことも全然わからないなと思い、\n集中して勉強をする期間を設けいと思いました。\n\nClojureのような表現力が高く、ハイスペック言語を学ぶことは、\n他の言語を書いている時でも役に立つと思っています。\n(問題に対しての手札が増えるイメージ)\n\nまた、他の関数型言語を仕事で書いたことがありますが、\n「関数型の良さを引き出せているのだろうか？」\nと考えることが多く、そのあたりに関しても意識しながらアウトプットしていきたいと思っています。\n\nさて、動機はこんなところにして、本題のClojureの話をしていきます\n今日は公式ドキュメントを読みながらまとめようと思います。\n\n## Clojureとは\n\n公式で書かれているものを訳してみます\n\n\u003e **Clojure is a robust, practical, and fast programming language with a set of useful features that together form a simple, coherent, and powerful tool.**\n\u003e \n\u003e Clojure is a dynamic, general-purpose programming language, combining the approachability and interactive development of a scripting language with an efficient and robust infrastructure for multithreaded programming. Clojure is a compiled language, yet remains completely dynamic – every feature supported by Clojure is supported at runtime. Clojure provides easy access to the Java frameworks, with optional type hints and type inference, to ensure that calls to Java can avoid reflection.\n\u003e \n\u003e Clojure is a dialect of Lisp, and shares with Lisp the code-as-data philosophy and a powerful macro system. Clojure is predominantly a functional programming language, and features a rich set of immutable, persistent data structures. When mutable state is needed, Clojure offers a software transactional memory system and reactive Agent system that ensure clean, correct, multithreaded designs.\n\u003e \n\u003e I hope you find Clojure's combination of facilities elegant, powerful, practical and fun to use.\n\u003e \n\u003e Rich Hickey\n\u003e author of Clojure\n\n**Clojureは、堅牢で実用的かつ高速なプログラミング言語であり、一連の便利な機能を備えており、それらが組み合わさることでシンプルで一貫性のある強力なツールを形成しています。**\n\nClojureは、スクリプト言語の取り組みやすさと対話的な開発環境を備えつつ、マルチスレッドプログラミングに適した効率的で堅牢なインフラを提供する、動的で汎用的なプログラミング言語です。\n\nClojureはコンパイルされる言語ですが、完全に動的で、Clojureがサポートするすべての機能は実行時に使用できます。また、Javaフレームワークに簡単にアクセスできるため、オプションの型ヒントと型推論により、Javaへの呼び出しでリフレクションを避けることが可能です。\n\nClojureはLispの方言であり、Lispと同様に「コードをデータとして扱う」哲学と強力なマクロシステムを持っています。\n\nClojureは主に関数型プログラミング言語であり、不変で永続的なデータ構造が豊富に揃っています。可変状態が必要な場合には、Clojureはソフトウェアトランザクショナルメモリシステムとリアクティブなエージェントシステムを提供しており、クリーンで正確なマルチスレッド設計を可能にします。\n\nClojureの持つ機能の組み合わせがエレガントで強力、実用的で楽しいと感じていただければ幸いです。\n\nRich Hickey\n\nhttps://clojure.org/\n\n## 特徴\n\n### 関数型プログラミング\n\n- イミュータブルデータ構造:\n    - データは基本的に不変（immutable）であり、変更が必要な場合は新しいコピーが作成される\n- ファーストクラス関数:\n    - 関数が第一級市民であり、引数や戻り値として扱える\n- 高階関数:\n    - 関数を引数に取ったり、関数を返したりする関数をサポート\n- 遅延評価:\n    - コレクションは必要になるまで評価されない（lazy-seq）\n\n### 強力なマクロシステム\n\n- Clojureのコードはデータ構造（S式）として記述されるため、コードを簡単に生成、変形可能\n    - これにより高度なDSLや再利用可能な構文を構築可能\n\n(コードを生成するプログラムくらいに認識しています)\n\n### データ指向プログラミング\n\n- 組み込みのリッチなデータ構造（リスト、ベクター、マップ、セット）\n\n### 並行処理のサポート\n\n- ソフトウェアトランザクショナルメモリ（STM）:\n    - 競合状態を避けるためのトランザクショナルな状態管理\n- エージェントとアトム:\n    - マルチスレッド環境で状態を管理\n- コア非同期ライブラリ（core.async）:\n    - チャネルとゴルーチンのような機能で非同期処理をシンプルにする\n\n### Javaとの相互運用性\n\n- JVM上で動作するため、Javaの豊富なライブラリやエコシステムをそのまま活用可能\n    - Javaオブジェクトやクラスの呼び出しが簡単（例: (java.util.Date.)）\n\n## 最後に\n\nこれだけみると、とても**強そう**です。\n\n特にマクロあたりはなんとなく知ってるけど、実際に使ったことがなく、\n今日から始まる **QIita アドベントカレンダー2024** を通して、特徴について知識だけでなく、実感していけることを目標にアウトプットしていきますので、よろしくお願いします。\n","coediting":false,"comments_count":0,"created_at":"2024-11-07T22:03:17+09:00","group":null,"id":"f592357a70307820f0dc","likes_count":1,"private":false,"reactions_count":0,"stocks_count":0,"tags":[{"name":"Clojure","versions":[]}],"title":"Clojureとは","updated_at":"2024-12-16T14:26:44+09:00","url":"https://qiita.com/maaaashi/items/f592357a70307820f0dc","user":{"description":"都内のweb系の企業でエンジニアをしています。\r\nどなたかのお役に立てれば幸いです。\r\n\r\n【Qiita Advent Calendar 2022】【Qiita Advent Calendar 2023】完走賞いただきました！","facebook_id":"","followees_count":22,"followers_count":26,"github_login_name":null,"id":"maaaashi","items_count":116,"linkedin_id":"","location":"千葉","name":"","organization":"","permanent_id":2985550,"profile_image_url":"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/2985550/6528cb551ba394c700da26cb135be1fc3f2928b5/x_large.png?1669290275","team_only":false,"twitter_screen_name":"pg_maaaashi","website_url":"https://maaaashi-website.mss-rep.com/"},"page_views_count":null,"team_membership":null,"organization_url_name":null,"slide":false}